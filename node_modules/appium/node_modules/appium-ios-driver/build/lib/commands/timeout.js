'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var commands = {},
    helpers = {},
    extensions = {};

commands.timeouts = function callee$0$0(type, duration) {
  var ms;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        ms = parseInt(duration, 10);
        context$1$0.t0 = type;
        context$1$0.next = context$1$0.t0 === 'command' ? 4 : context$1$0.t0 === 'implicit' ? 6 : context$1$0.t0 === 'page load' ? 9 : context$1$0.t0 === 'script' ? 11 : 14;
        break;

      case 4:
        this.newCommandTimeout(ms);
        return context$1$0.abrupt('break', 15);

      case 6:
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.implicitWait(ms));

      case 8:
        return context$1$0.abrupt('break', 15);

      case 9:
        this.pageLoadTimeout(ms);
        return context$1$0.abrupt('break', 15);

      case 11:
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap(this.asyncScriptTimeout(ms));

      case 13:
        return context$1$0.abrupt('break', 15);

      case 14:
        throw new Error('Invalid timeout \'' + type + '\'');

      case 15:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.pageLoadTimeout = function (ms) {
  ms = parseInt(ms, 10);
  this.pageLoadMs = ms;
  _logger2['default'].debug('Set page load timeout to ' + ms + 'ms');
};

commands.asyncScriptTimeout = function callee$0$0(ms) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.asyncWaitMs = ms;
        _logger2['default'].debug('Set async script timeout to ' + ms + 'ms');

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.pageLoadTimeout = function (ms) {
  this.pageLoadMs = ms;

  if (this.remote) {
    this.remote.pageLoadMs = ms;
  }
  _logger2['default'].debug('Set page load timeout to ' + ms + 'ms');
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy90aW1lb3V0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBbUIsV0FBVzs7OztBQUc5QixJQUFJLFFBQVEsR0FBRyxFQUFFO0lBQUUsT0FBTyxHQUFHLEVBQUU7SUFBRSxVQUFVLEdBQUcsRUFBRSxDQUFDOztBQUVqRCxRQUFRLENBQUMsUUFBUSxHQUFHLG9CQUFnQixJQUFJLEVBQUUsUUFBUTtNQUM1QyxFQUFFOzs7O0FBQUYsVUFBRSxHQUFHLFFBQVEsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO3lCQUN4QixJQUFJOzhDQUNKLFNBQVMsMEJBR1QsVUFBVSwwQkFHVixXQUFXLDBCQUdYLFFBQVE7Ozs7QUFSWCxZQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7O3lDQUdyQixJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQzs7Ozs7O0FBRzNCLFlBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7Ozs7O3lDQUduQixJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDOzs7Ozs7Y0FHM0IsSUFBSSxLQUFLLHdCQUFxQixJQUFJLFFBQUk7Ozs7Ozs7Q0FFakQsQ0FBQzs7QUFFRixPQUFPLENBQUMsZUFBZSxHQUFHLFVBQVUsRUFBRSxFQUFFO0FBQ3RDLElBQUUsR0FBRyxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3RCLE1BQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0FBQ3JCLHNCQUFPLEtBQUssK0JBQTZCLEVBQUUsUUFBSyxDQUFDO0NBQ2xELENBQUM7O0FBRUYsUUFBUSxDQUFDLGtCQUFrQixHQUFHLG9CQUFnQixFQUFFOzs7O0FBQzlDLFlBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLDRCQUFPLEtBQUssa0NBQWdDLEVBQUUsUUFBSyxDQUFDOzs7Ozs7O0NBQ3JELENBQUM7O0FBR0YsT0FBTyxDQUFDLGVBQWUsR0FBRyxVQUFVLEVBQUUsRUFBRTtBQUN0QyxNQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFckIsTUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2YsUUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0dBQzdCO0FBQ0Qsc0JBQU8sS0FBSywrQkFBNkIsRUFBRSxRQUFLLENBQUM7Q0FDbEQsQ0FBQzs7QUFHRixlQUFjLFVBQVUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDcEMsUUFBUSxHQUFSLFFBQVE7UUFBRSxPQUFPLEdBQVAsT0FBTztxQkFDWCxVQUFVIiwiZmlsZSI6ImxpYi9jb21tYW5kcy90aW1lb3V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9sb2dnZXInO1xuXG5cbmxldCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuY29tbWFuZHMudGltZW91dHMgPSBhc3luYyBmdW5jdGlvbiAodHlwZSwgZHVyYXRpb24pIHtcbiAgbGV0IG1zID0gcGFyc2VJbnQoZHVyYXRpb24sIDEwKTtcbiAgc3dpdGNoKHR5cGUpIHtcbiAgICBjYXNlICdjb21tYW5kJzpcbiAgICAgIHRoaXMubmV3Q29tbWFuZFRpbWVvdXQobXMpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnaW1wbGljaXQnOlxuICAgICAgYXdhaXQgdGhpcy5pbXBsaWNpdFdhaXQobXMpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAncGFnZSBsb2FkJzpcbiAgICAgIHRoaXMucGFnZUxvYWRUaW1lb3V0KG1zKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3NjcmlwdCc6XG4gICAgICBhd2FpdCB0aGlzLmFzeW5jU2NyaXB0VGltZW91dChtcyk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHRpbWVvdXQgJyR7dHlwZX0nYCk7XG4gIH1cbn07XG5cbmhlbHBlcnMucGFnZUxvYWRUaW1lb3V0ID0gZnVuY3Rpb24gKG1zKSB7XG4gIG1zID0gcGFyc2VJbnQobXMsIDEwKTtcbiAgdGhpcy5wYWdlTG9hZE1zID0gbXM7XG4gIGxvZ2dlci5kZWJ1ZyhgU2V0IHBhZ2UgbG9hZCB0aW1lb3V0IHRvICR7bXN9bXNgKTtcbn07XG5cbmNvbW1hbmRzLmFzeW5jU2NyaXB0VGltZW91dCA9IGFzeW5jIGZ1bmN0aW9uIChtcykge1xuICB0aGlzLmFzeW5jV2FpdE1zID0gbXM7XG4gIGxvZ2dlci5kZWJ1ZyhgU2V0IGFzeW5jIHNjcmlwdCB0aW1lb3V0IHRvICR7bXN9bXNgKTtcbn07XG5cblxuaGVscGVycy5wYWdlTG9hZFRpbWVvdXQgPSBmdW5jdGlvbiAobXMpIHtcbiAgdGhpcy5wYWdlTG9hZE1zID0gbXM7XG5cbiAgaWYgKHRoaXMucmVtb3RlKSB7XG4gICAgdGhpcy5yZW1vdGUucGFnZUxvYWRNcyA9IG1zO1xuICB9XG4gIGxvZ2dlci5kZWJ1ZyhgU2V0IHBhZ2UgbG9hZCB0aW1lb3V0IHRvICR7bXN9bXNgKTtcbn07XG5cblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcywgaGVscGVycyk7XG5leHBvcnQgeyBjb21tYW5kcywgaGVscGVycyB9O1xuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdfQ==