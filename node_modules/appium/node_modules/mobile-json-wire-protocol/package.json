{
  "_args": [
    [
      "mobile-json-wire-protocol@https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
      "/Users/okkijaya/Documents/webprothird/fototo/node_modules/appium"
    ]
  ],
  "_from": "mobile-json-wire-protocol@>=1.3.3 <2.0.0",
  "_id": "mobile-json-wire-protocol@1.3.3",
  "_inCache": true,
  "_location": "/appium/mobile-json-wire-protocol",
  "_phantomChildren": {},
  "_requested": {
    "name": "mobile-json-wire-protocol",
    "raw": "mobile-json-wire-protocol@https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
    "rawSpec": "https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/appium-android-driver",
    "/appium/appium-android-driver/appium-android-bootstrap",
    "/appium/appium-base-driver",
    "/appium/appium-express",
    "/appium/appium-fake-driver",
    "/appium/appium-ios-driver",
    "/appium/appium-ios-driver/appium-remote-debugger",
    "/appium/appium-ios-driver/appium-uiauto",
    "/appium/appium-selendroid-driver"
  ],
  "_resolved": "https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
  "_shasum": "8745653a32c100707f6db934f788d89511a1facb",
  "_shrinkwrap": null,
  "_spec": "mobile-json-wire-protocol@https://registry.npmjs.org/mobile-json-wire-protocol/-/mobile-json-wire-protocol-1.3.3.tgz",
  "_where": "/Users/okkijaya/Documents/webprothird/fototo/node_modules/appium",
  "author": {
    "name": "appium"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/appium/node-mobile-json-wire-protocol/issues"
  },
  "dependencies": {
    "appium-logger": "^2.0.0",
    "babel-runtime": "=5.8.24",
    "bluebird": "^2.10.0",
    "es6-error": "^2.0.2",
    "lodash": "^3.10.1",
    "source-map-support": "^0.3.2"
  },
  "description": "JavaScript implementation of the Mobile JSON Wire Protocol.",
  "devDependencies": {
    "appium-express": "^1.0.0",
    "appium-gulp-plugins": "^1.3.11",
    "chai": "^3.2.0",
    "chai-as-promised": "^5.0.0",
    "gulp": "^3.9.0",
    "request-promise": "^0.4.3"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "homepage": "https://github.com/appium/node-mobile-json-wire-protocol#readme",
  "keywords": [
    "appium"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "mobile-json-wire-protocol",
  "optionalDependencies": {},
  "readme": "## mobile-json-wire-protocol\n\n[![NPM version](http://img.shields.io/npm/v/mobile-json-wire-protocol.svg)](https://npmjs.org/package/mobile-json-wire-protocol)\n[![Downloads](http://img.shields.io/npm/dm/mobile-json-wire-protocol.svg)](https://npmjs.org/package/mobile-json-wire-protocol)\n[![Dependency Status](https://david-dm.org/appium/node-mobile-json-wire-protocol/master.svg)](https://david-dm.org/appium/node-mobile-json-wire-protocol/master)\n[![devDependency Status](https://david-dm.org/appium/node-mobile-json-wire-protocol/master/dev-status.svg)](https://david-dm.org/appium/appium-adb/2.0#info=devDependencies)\n\n[![Build Status](https://travis-ci.org/appium/node-mobile-json-wire-protocol.svg?branch=master)](https://travis-ci.org/appium/node-mobile-json-wire-protocol)\n[![Coverage Status](https://coveralls.io/repos/appium/node-mobile-json-wire-protocol/badge.svg?branch=master)](https://coveralls.io/r/appium/node-mobile-json-wire-protocol?branch=master)\n\n\nAn abstraction of the Mobile JSON Wire Protocol ([spec](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md)) with Appium extensions (as specified [here](http://www.w3.org/TR/webdriver/#protocol-extensions)).\n\n\n### Endpoints in the protocol\n\nThe Mobile JSON Wire Protocol package gives access to a number of endpoints documented [here](docs/protocol-methods.md).\n\n\n### MobileJsonWireProtocol\n\nThe basic class, subclassed by drivers that will use the protocol.\n\n\n### routeConfiguringFunction (driver)\n\nThis function gives drivers access to the protocol routes. It returns a function that itself will take an [Express](http://expressjs.com/) application.\n\n\n### isSessionCommand (command)\n\nChecks if the `command` needs to have a session associated with it.\n\n\n### ALL_COMMANDS\n\nAn array of all the commands that will be dispatched to by the Mobile JSON Wire Proxy endpoints.\n\n\n### NO_SESSION_ID_COMMANDS\n\nAn array of commands that do not need a session associated with them.\n\n\n### Errors\n\nThis package exports a number of classes and methods related to Selenium error handling. There are error classes for each Selenium error type (see [here](https://code.google.com/p/selenium/wiki/JsonWireProtocol#Response_Status_Codes), as well as the context errors in the [mobile spec](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts)). The list of errors, and their meanings, can be found [here](docs/errors.md).\n\nThere are, in addition, two helper methods for dealing with errors\n\n`isErrorType (err, type)`\n\n- checks if the `err` object is a Mobile JSON Wire Protocol error of a particular type\n- arguments\n  - `err` - the error object to test\n  - `type` - the error class to test against\n- usage\n  ```js\n  import { errors, isErrorType } from 'mobile-json-wire-protocol';\n\n  try {\n    // do some stuff...\n  } catch (err) {\n    if (isErrorType(err, errors.InvalidCookieDomainError)) {\n      // process...\n    }\n  }\n  ```\n\n`errorFromCode (code, message)`\n\n- retrieve the appropriate error for an error code, with the supplied message.\n- arguments\n  - `code` - the integer error code for a Mobile JSON Wire Protocol error\n  - `message` - the message to be encapsulated in the error\n- usage\n  ```js\n  import { errors, errorFromCode } from 'mobile-json-wire-protocol';\n\n  let error = errorFromCode(6, 'an error has occurred');\n\n  console.log(error instanceof errors.NoSuchDriverError);\n  // => true\n\n  console.log(error.message === 'an error has occurred');\n  // => true\n  ```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/node-mobile-json-wire-protocol.git"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp"
  },
  "version": "1.3.3"
}
